// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/order/order.proto

/*
Package go_micro_srv_order is a generated protocol buffer package.

It is generated from these files:
	proto/order/order.proto

It has these top-level messages:
	OrdersRequest
	OrderRequest
	GetUserOrderRequest
	GetUserOrdersRequest
	RemoveOrderRequest
	Order
	UserOrderData
	UserOrdersData
	OrderResponse
	OrderListResponse
*/
package go_micro_srv_order

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Requests
type OrdersRequest struct {
	Orders []*OrderRequest `protobuf:"bytes,1,rep,name=orders" json:"orders,omitempty"`
}

func (m *OrdersRequest) Reset()                    { *m = OrdersRequest{} }
func (m *OrdersRequest) String() string            { return proto.CompactTextString(m) }
func (*OrdersRequest) ProtoMessage()               {}
func (*OrdersRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *OrdersRequest) GetOrders() []*OrderRequest {
	if m != nil {
		return m.Orders
	}
	return nil
}

type OrderRequest struct {
	OrderId          string  `protobuf:"bytes,1,opt,name=orderId" json:"orderId,omitempty"`
	UserId           string  `protobuf:"bytes,2,opt,name=userId" json:"userId,omitempty"`
	ApiKeyId         string  `protobuf:"bytes,3,opt,name=apiKeyId" json:"apiKeyId,omitempty"`
	Exchange         string  `protobuf:"bytes,4,opt,name=exchange" json:"exchange,omitempty"`
	MarketName       string  `protobuf:"bytes,5,opt,name=marketName" json:"marketName,omitempty"`
	Side             string  `protobuf:"bytes,6,opt,name=side" json:"side,omitempty"`
	OrderType        string  `protobuf:"bytes,7,opt,name=orderType" json:"orderType,omitempty"`
	BaseQuantity     float64 `protobuf:"fixed64,8,opt,name=baseQuantity" json:"baseQuantity,omitempty"`
	BasePercent      float64 `protobuf:"fixed64,9,opt,name=basePercent" json:"basePercent,omitempty"`
	CurrencyQuantity float64 `protobuf:"fixed64,10,opt,name=currencyQuantity" json:"currencyQuantity,omitempty"`
	CurrencyPercent  float64 `protobuf:"fixed64,11,opt,name=currencyPercent" json:"currencyPercent,omitempty"`
	Conditions       string  `protobuf:"bytes,12,opt,name=conditions" json:"conditions,omitempty"`
	ParentOrderId    string  `protobuf:"bytes,13,opt,name=parentOrderId" json:"parentOrderId,omitempty"`
}

func (m *OrderRequest) Reset()                    { *m = OrderRequest{} }
func (m *OrderRequest) String() string            { return proto.CompactTextString(m) }
func (*OrderRequest) ProtoMessage()               {}
func (*OrderRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *OrderRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *OrderRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *OrderRequest) GetApiKeyId() string {
	if m != nil {
		return m.ApiKeyId
	}
	return ""
}

func (m *OrderRequest) GetExchange() string {
	if m != nil {
		return m.Exchange
	}
	return ""
}

func (m *OrderRequest) GetMarketName() string {
	if m != nil {
		return m.MarketName
	}
	return ""
}

func (m *OrderRequest) GetSide() string {
	if m != nil {
		return m.Side
	}
	return ""
}

func (m *OrderRequest) GetOrderType() string {
	if m != nil {
		return m.OrderType
	}
	return ""
}

func (m *OrderRequest) GetBaseQuantity() float64 {
	if m != nil {
		return m.BaseQuantity
	}
	return 0
}

func (m *OrderRequest) GetBasePercent() float64 {
	if m != nil {
		return m.BasePercent
	}
	return 0
}

func (m *OrderRequest) GetCurrencyQuantity() float64 {
	if m != nil {
		return m.CurrencyQuantity
	}
	return 0
}

func (m *OrderRequest) GetCurrencyPercent() float64 {
	if m != nil {
		return m.CurrencyPercent
	}
	return 0
}

func (m *OrderRequest) GetConditions() string {
	if m != nil {
		return m.Conditions
	}
	return ""
}

func (m *OrderRequest) GetParentOrderId() string {
	if m != nil {
		return m.ParentOrderId
	}
	return ""
}

type GetUserOrderRequest struct {
	OrderId string `protobuf:"bytes,1,opt,name=orderId" json:"orderId,omitempty"`
	UserId  string `protobuf:"bytes,2,opt,name=userId" json:"userId,omitempty"`
}

func (m *GetUserOrderRequest) Reset()                    { *m = GetUserOrderRequest{} }
func (m *GetUserOrderRequest) String() string            { return proto.CompactTextString(m) }
func (*GetUserOrderRequest) ProtoMessage()               {}
func (*GetUserOrderRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetUserOrderRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *GetUserOrderRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type GetUserOrdersRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=userId" json:"userId,omitempty"`
}

func (m *GetUserOrdersRequest) Reset()                    { *m = GetUserOrdersRequest{} }
func (m *GetUserOrdersRequest) String() string            { return proto.CompactTextString(m) }
func (*GetUserOrdersRequest) ProtoMessage()               {}
func (*GetUserOrdersRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetUserOrdersRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type RemoveOrderRequest struct {
	OrderId string `protobuf:"bytes,1,opt,name=orderId" json:"orderId,omitempty"`
	UserId  string `protobuf:"bytes,2,opt,name=userId" json:"userId,omitempty"`
}

func (m *RemoveOrderRequest) Reset()                    { *m = RemoveOrderRequest{} }
func (m *RemoveOrderRequest) String() string            { return proto.CompactTextString(m) }
func (*RemoveOrderRequest) ProtoMessage()               {}
func (*RemoveOrderRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *RemoveOrderRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *RemoveOrderRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

// Responses
type Order struct {
	OrderId            string  `protobuf:"bytes,1,opt,name=orderId" json:"orderId,omitempty"`
	UserId             string  `protobuf:"bytes,2,opt,name=userId" json:"userId,omitempty"`
	ApiKeyId           string  `protobuf:"bytes,3,opt,name=apiKeyId" json:"apiKeyId,omitempty"`
	Exchange           string  `protobuf:"bytes,4,opt,name=exchange" json:"exchange,omitempty"`
	ExchangeOrderId    string  `protobuf:"bytes,5,opt,name=exchangeOrderId" json:"exchangeOrderId,omitempty"`
	ExchangeMarketName string  `protobuf:"bytes,6,opt,name=exchangeMarketName" json:"exchangeMarketName,omitempty"`
	MarketName         string  `protobuf:"bytes,7,opt,name=marketName" json:"marketName,omitempty"`
	Side               string  `protobuf:"bytes,8,opt,name=side" json:"side,omitempty"`
	OrderType          string  `protobuf:"bytes,9,opt,name=orderType" json:"orderType,omitempty"`
	BaseQuantity       float64 `protobuf:"fixed64,10,opt,name=baseQuantity" json:"baseQuantity,omitempty"`
	BasePercent        float64 `protobuf:"fixed64,11,opt,name=basePercent" json:"basePercent,omitempty"`
	CurrencyQuantity   float64 `protobuf:"fixed64,12,opt,name=currencyQuantity" json:"currencyQuantity,omitempty"`
	CurrencyPercent    float64 `protobuf:"fixed64,13,opt,name=currencyPercent" json:"currencyPercent,omitempty"`
	Status             string  `protobuf:"bytes,14,opt,name=status" json:"status,omitempty"`
	Conditions         string  `protobuf:"bytes,15,opt,name=conditions" json:"conditions,omitempty"`
	Condition          string  `protobuf:"bytes,16,opt,name=condition" json:"condition,omitempty"`
	ParentOrderId      string  `protobuf:"bytes,17,opt,name=parentOrderId" json:"parentOrderId,omitempty"`
}

func (m *Order) Reset()                    { *m = Order{} }
func (m *Order) String() string            { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()               {}
func (*Order) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Order) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *Order) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Order) GetApiKeyId() string {
	if m != nil {
		return m.ApiKeyId
	}
	return ""
}

func (m *Order) GetExchange() string {
	if m != nil {
		return m.Exchange
	}
	return ""
}

func (m *Order) GetExchangeOrderId() string {
	if m != nil {
		return m.ExchangeOrderId
	}
	return ""
}

func (m *Order) GetExchangeMarketName() string {
	if m != nil {
		return m.ExchangeMarketName
	}
	return ""
}

func (m *Order) GetMarketName() string {
	if m != nil {
		return m.MarketName
	}
	return ""
}

func (m *Order) GetSide() string {
	if m != nil {
		return m.Side
	}
	return ""
}

func (m *Order) GetOrderType() string {
	if m != nil {
		return m.OrderType
	}
	return ""
}

func (m *Order) GetBaseQuantity() float64 {
	if m != nil {
		return m.BaseQuantity
	}
	return 0
}

func (m *Order) GetBasePercent() float64 {
	if m != nil {
		return m.BasePercent
	}
	return 0
}

func (m *Order) GetCurrencyQuantity() float64 {
	if m != nil {
		return m.CurrencyQuantity
	}
	return 0
}

func (m *Order) GetCurrencyPercent() float64 {
	if m != nil {
		return m.CurrencyPercent
	}
	return 0
}

func (m *Order) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Order) GetConditions() string {
	if m != nil {
		return m.Conditions
	}
	return ""
}

func (m *Order) GetCondition() string {
	if m != nil {
		return m.Condition
	}
	return ""
}

func (m *Order) GetParentOrderId() string {
	if m != nil {
		return m.ParentOrderId
	}
	return ""
}

type UserOrderData struct {
	Order *Order `protobuf:"bytes,1,opt,name=order" json:"order,omitempty"`
}

func (m *UserOrderData) Reset()                    { *m = UserOrderData{} }
func (m *UserOrderData) String() string            { return proto.CompactTextString(m) }
func (*UserOrderData) ProtoMessage()               {}
func (*UserOrderData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *UserOrderData) GetOrder() *Order {
	if m != nil {
		return m.Order
	}
	return nil
}

type UserOrdersData struct {
	Orders []*Order `protobuf:"bytes,1,rep,name=orders" json:"orders,omitempty"`
}

func (m *UserOrdersData) Reset()                    { *m = UserOrdersData{} }
func (m *UserOrdersData) String() string            { return proto.CompactTextString(m) }
func (*UserOrdersData) ProtoMessage()               {}
func (*UserOrdersData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *UserOrdersData) GetOrders() []*Order {
	if m != nil {
		return m.Orders
	}
	return nil
}

type OrderResponse struct {
	Status  string         `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Message string         `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Data    *UserOrderData `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *OrderResponse) Reset()                    { *m = OrderResponse{} }
func (m *OrderResponse) String() string            { return proto.CompactTextString(m) }
func (*OrderResponse) ProtoMessage()               {}
func (*OrderResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *OrderResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *OrderResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *OrderResponse) GetData() *UserOrderData {
	if m != nil {
		return m.Data
	}
	return nil
}

type OrderListResponse struct {
	Status  string          `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Message string          `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Data    *UserOrdersData `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *OrderListResponse) Reset()                    { *m = OrderListResponse{} }
func (m *OrderListResponse) String() string            { return proto.CompactTextString(m) }
func (*OrderListResponse) ProtoMessage()               {}
func (*OrderListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *OrderListResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *OrderListResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *OrderListResponse) GetData() *UserOrdersData {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*OrdersRequest)(nil), "go.micro.srv.order.OrdersRequest")
	proto.RegisterType((*OrderRequest)(nil), "go.micro.srv.order.OrderRequest")
	proto.RegisterType((*GetUserOrderRequest)(nil), "go.micro.srv.order.GetUserOrderRequest")
	proto.RegisterType((*GetUserOrdersRequest)(nil), "go.micro.srv.order.GetUserOrdersRequest")
	proto.RegisterType((*RemoveOrderRequest)(nil), "go.micro.srv.order.RemoveOrderRequest")
	proto.RegisterType((*Order)(nil), "go.micro.srv.order.Order")
	proto.RegisterType((*UserOrderData)(nil), "go.micro.srv.order.UserOrderData")
	proto.RegisterType((*UserOrdersData)(nil), "go.micro.srv.order.UserOrdersData")
	proto.RegisterType((*OrderResponse)(nil), "go.micro.srv.order.OrderResponse")
	proto.RegisterType((*OrderListResponse)(nil), "go.micro.srv.order.OrderListResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for OrderService service

type OrderServiceClient interface {
	AddOrders(ctx context.Context, in *OrdersRequest, opts ...client.CallOption) (*OrderListResponse, error)
	GetUserOrder(ctx context.Context, in *GetUserOrderRequest, opts ...client.CallOption) (*OrderResponse, error)
	GetUserOrders(ctx context.Context, in *GetUserOrdersRequest, opts ...client.CallOption) (*OrderListResponse, error)
	RemoveOrder(ctx context.Context, in *RemoveOrderRequest, opts ...client.CallOption) (*OrderResponse, error)
	UpdateOrder(ctx context.Context, in *OrderRequest, opts ...client.CallOption) (*OrderResponse, error)
}

type orderServiceClient struct {
	c           client.Client
	serviceName string
}

func NewOrderServiceClient(serviceName string, c client.Client) OrderServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "go.micro.srv.order"
	}
	return &orderServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *orderServiceClient) AddOrders(ctx context.Context, in *OrdersRequest, opts ...client.CallOption) (*OrderListResponse, error) {
	req := c.c.NewRequest(c.serviceName, "OrderService.AddOrders", in)
	out := new(OrderListResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) GetUserOrder(ctx context.Context, in *GetUserOrderRequest, opts ...client.CallOption) (*OrderResponse, error) {
	req := c.c.NewRequest(c.serviceName, "OrderService.GetUserOrder", in)
	out := new(OrderResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) GetUserOrders(ctx context.Context, in *GetUserOrdersRequest, opts ...client.CallOption) (*OrderListResponse, error) {
	req := c.c.NewRequest(c.serviceName, "OrderService.GetUserOrders", in)
	out := new(OrderListResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) RemoveOrder(ctx context.Context, in *RemoveOrderRequest, opts ...client.CallOption) (*OrderResponse, error) {
	req := c.c.NewRequest(c.serviceName, "OrderService.RemoveOrder", in)
	out := new(OrderResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) UpdateOrder(ctx context.Context, in *OrderRequest, opts ...client.CallOption) (*OrderResponse, error) {
	req := c.c.NewRequest(c.serviceName, "OrderService.UpdateOrder", in)
	out := new(OrderResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for OrderService service

type OrderServiceHandler interface {
	AddOrders(context.Context, *OrdersRequest, *OrderListResponse) error
	GetUserOrder(context.Context, *GetUserOrderRequest, *OrderResponse) error
	GetUserOrders(context.Context, *GetUserOrdersRequest, *OrderListResponse) error
	RemoveOrder(context.Context, *RemoveOrderRequest, *OrderResponse) error
	UpdateOrder(context.Context, *OrderRequest, *OrderResponse) error
}

func RegisterOrderServiceHandler(s server.Server, hdlr OrderServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&OrderService{hdlr}, opts...))
}

type OrderService struct {
	OrderServiceHandler
}

func (h *OrderService) AddOrders(ctx context.Context, in *OrdersRequest, out *OrderListResponse) error {
	return h.OrderServiceHandler.AddOrders(ctx, in, out)
}

func (h *OrderService) GetUserOrder(ctx context.Context, in *GetUserOrderRequest, out *OrderResponse) error {
	return h.OrderServiceHandler.GetUserOrder(ctx, in, out)
}

func (h *OrderService) GetUserOrders(ctx context.Context, in *GetUserOrdersRequest, out *OrderListResponse) error {
	return h.OrderServiceHandler.GetUserOrders(ctx, in, out)
}

func (h *OrderService) RemoveOrder(ctx context.Context, in *RemoveOrderRequest, out *OrderResponse) error {
	return h.OrderServiceHandler.RemoveOrder(ctx, in, out)
}

func (h *OrderService) UpdateOrder(ctx context.Context, in *OrderRequest, out *OrderResponse) error {
	return h.OrderServiceHandler.UpdateOrder(ctx, in, out)
}

func init() { proto.RegisterFile("proto/order/order.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 642 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0xdb, 0x6e, 0xd3, 0x40,
	0x10, 0xc5, 0x34, 0x4d, 0x9a, 0x71, 0xd2, 0xcb, 0x80, 0xca, 0x52, 0x55, 0x28, 0xb5, 0xb8, 0x44,
	0x3c, 0xb8, 0x22, 0x08, 0xc4, 0x23, 0x08, 0x44, 0x55, 0x71, 0x29, 0x98, 0x56, 0x48, 0x88, 0x97,
	0xad, 0x3d, 0x2a, 0x16, 0x8a, 0x1d, 0x76, 0x37, 0x55, 0xf3, 0xc0, 0x1f, 0xf1, 0xca, 0xd7, 0xf0,
	0x33, 0x28, 0xe3, 0x4b, 0xec, 0xc4, 0x69, 0x82, 0x2a, 0xf1, 0x12, 0x79, 0xce, 0x39, 0x3b, 0xe3,
	0x19, 0x1f, 0xcd, 0x06, 0x6e, 0x0d, 0x54, 0x6c, 0xe2, 0xfd, 0x58, 0x05, 0xa4, 0x92, 0x5f, 0x97,
	0x11, 0xc4, 0xb3, 0xd8, 0xed, 0x87, 0xbe, 0x8a, 0x5d, 0xad, 0xce, 0x5d, 0x66, 0x9c, 0x43, 0x68,
	0x1f, 0x8d, 0x1f, 0xb4, 0x47, 0x3f, 0x86, 0xa4, 0x0d, 0x3e, 0x83, 0x3a, 0x33, 0x5a, 0x58, 0x9d,
	0x95, 0xae, 0xdd, 0xeb, 0xb8, 0xb3, 0xa7, 0x5c, 0x3e, 0x92, 0x9e, 0xf0, 0x52, 0xbd, 0xf3, 0x6b,
	0x05, 0x5a, 0x45, 0x02, 0x05, 0x34, 0x98, 0x3a, 0x0c, 0x84, 0xd5, 0xb1, 0xba, 0x4d, 0x2f, 0x0b,
	0x71, 0x1b, 0xea, 0x43, 0xcd, 0xc4, 0x75, 0x26, 0xd2, 0x08, 0x77, 0x60, 0x4d, 0x0e, 0xc2, 0x37,
	0x34, 0x3a, 0x0c, 0xc4, 0x0a, 0x33, 0x79, 0x3c, 0xe6, 0xe8, 0xc2, 0xff, 0x26, 0xa3, 0x33, 0x12,
	0xb5, 0x84, 0xcb, 0x62, 0xbc, 0x03, 0xd0, 0x97, 0xea, 0x3b, 0x99, 0xf7, 0xb2, 0x4f, 0x62, 0x95,
	0xd9, 0x02, 0x82, 0x08, 0x35, 0x1d, 0x06, 0x24, 0xea, 0xcc, 0xf0, 0x33, 0xee, 0x42, 0x93, 0x5f,
	0xe7, 0x78, 0x34, 0x20, 0xd1, 0x60, 0x62, 0x02, 0xa0, 0x03, 0xad, 0x53, 0xa9, 0xe9, 0xe3, 0x50,
	0x46, 0x26, 0x34, 0x23, 0xb1, 0xd6, 0xb1, 0xba, 0x96, 0x57, 0xc2, 0xb0, 0x03, 0xf6, 0x38, 0xfe,
	0x40, 0xca, 0xa7, 0xc8, 0x88, 0x26, 0x4b, 0x8a, 0x10, 0x3e, 0x84, 0x4d, 0x7f, 0xa8, 0x14, 0x45,
	0xfe, 0x28, 0xcf, 0x04, 0x2c, 0x9b, 0xc1, 0xb1, 0x0b, 0x1b, 0x19, 0x96, 0x65, 0xb4, 0x59, 0x3a,
	0x0d, 0x8f, 0xbb, 0xf5, 0xe3, 0x28, 0x08, 0x4d, 0x18, 0x47, 0x5a, 0xb4, 0x92, 0x6e, 0x27, 0x08,
	0xde, 0x85, 0xf6, 0x40, 0x2a, 0x8a, 0xcc, 0x51, 0x3a, 0xfd, 0x36, 0x4b, 0xca, 0xa0, 0x73, 0x00,
	0x37, 0x0e, 0xc8, 0x9c, 0x68, 0x52, 0x57, 0xfb, 0x68, 0x8e, 0x0b, 0x37, 0x8b, 0x89, 0x72, 0x27,
	0x4d, 0xf4, 0x56, 0x49, 0xff, 0x1a, 0xd0, 0xa3, 0x7e, 0x7c, 0x4e, 0x57, 0xac, 0xfb, 0xbb, 0x06,
	0xab, 0x9c, 0xe2, 0x3f, 0x1a, 0xad, 0x0b, 0x1b, 0xd9, 0x73, 0x36, 0xdc, 0xc4, 0x6d, 0xd3, 0x30,
	0xba, 0x80, 0x19, 0xf4, 0x6e, 0x62, 0xcd, 0xc4, 0x80, 0x15, 0xcc, 0x94, 0x85, 0x1b, 0x73, 0x2d,
	0xbc, 0x36, 0xcf, 0xc2, 0xcd, 0x45, 0x16, 0x86, 0xc5, 0x16, 0xb6, 0x97, 0xb3, 0x70, 0x6b, 0x79,
	0x0b, 0xb7, 0xab, 0x2d, 0xbc, 0x0d, 0x75, 0x6d, 0xa4, 0x19, 0x6a, 0xb1, 0x9e, 0x7c, 0x97, 0x24,
	0x9a, 0xb2, 0xf6, 0xc6, 0x8c, 0xb5, 0x77, 0xa1, 0x99, 0x47, 0x62, 0x33, 0xe9, 0x38, 0x07, 0x66,
	0x8d, 0xbf, 0x55, 0x65, 0xfc, 0xe7, 0xd0, 0xce, 0xcd, 0xfa, 0x4a, 0x1a, 0x89, 0xfb, 0xb0, 0xca,
	0x53, 0x63, 0xf3, 0xd8, 0xbd, 0xdb, 0xf3, 0x37, 0x5e, 0xa2, 0x73, 0x5e, 0xc2, 0xfa, 0xc4, 0xee,
	0x9c, 0xe2, 0xd1, 0xd4, 0xd6, 0xbc, 0x24, 0x47, 0xb6, 0x2e, 0x2f, 0xd2, 0xcd, 0xeb, 0x91, 0x1e,
	0xc4, 0x91, 0xa6, 0xc2, 0x4c, 0xac, 0xd2, 0x4c, 0x04, 0x34, 0xfa, 0xa4, 0xb5, 0x3c, 0xa3, 0xd4,
	0xc4, 0x59, 0x88, 0x4f, 0xa0, 0x16, 0x48, 0x23, 0xd9, 0xc1, 0x76, 0x6f, 0xaf, 0xaa, 0x66, 0xa9,
	0x53, 0x8f, 0xe5, 0xce, 0x4f, 0xd8, 0x62, 0xe8, 0x6d, 0xa8, 0xcd, 0x15, 0xaa, 0x3f, 0x2d, 0x55,
	0x77, 0x2e, 0xad, 0xae, 0x27, 0xe5, 0x7b, 0x7f, 0xb2, 0x7b, 0xe2, 0x13, 0xa9, 0xf3, 0xd0, 0x27,
	0xfc, 0x0c, 0xcd, 0x17, 0x41, 0x90, 0xe8, 0x70, 0x6f, 0xee, 0xe4, 0xb2, 0xc5, 0xb2, 0x73, 0x6f,
	0xae, 0xa4, 0xd8, 0x91, 0x73, 0x0d, 0xbf, 0x42, 0xab, 0xb8, 0x99, 0xf0, 0x41, 0xd5, 0xc1, 0x8a,
	0x25, 0xb8, 0xb3, 0x77, 0xc9, 0xa5, 0x97, 0x67, 0x3f, 0x85, 0x76, 0x69, 0xef, 0x61, 0x77, 0x51,
	0xfa, 0x7f, 0xef, 0xe0, 0x0b, 0xd8, 0x85, 0x5d, 0x89, 0xf7, 0xab, 0xce, 0xcd, 0x2e, 0xd3, 0xe5,
	0xde, 0xff, 0x18, 0xec, 0x93, 0x41, 0x20, 0x4d, 0x9a, 0x7b, 0xe1, 0x45, 0xbf, 0x54, 0xd6, 0xd3,
	0x3a, 0xff, 0xd7, 0x78, 0xfc, 0x37, 0x00, 0x00, 0xff, 0xff, 0xa6, 0x26, 0xe0, 0x15, 0x86, 0x08,
	0x00, 0x00,
}
