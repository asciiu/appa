syntax = "proto3";

package order;

// service OrderService {
//   rpc AddOrders(OrdersRequest) returns (OrderListResponse) {}
//   rpc GetUserOrder(GetUserOrderRequest) returns (OrderResponse) {}
//   rpc GetUserOrders(GetUserOrdersRequest) returns (OrderListResponse) {}
//   rpc RemoveOrder(RemoveOrderRequest) returns (OrderResponse) {}
//   rpc UpdateOrder(UpdateOrderRequest) returns (OrderResponse) {}
// }

// Requests
message OrdersRequest {
  repeated OrderRequest orders = 1; 
}

message TriggerRequest {
  string triggerID = 1;
  string name = 2;
  string code = 3;
  string triggerTemplateID = 4;
  repeated string actions = 5;
}

message UpdateOrderRequest {
  string orderID = 1;
  string userID = 2;
  double balancePercent = 3;
  double limitPrice = 4;
  repeated TriggerRequest triggers = 5;
}

message OrderRequest {
  uint32 parentOrderNumber = 1;
  string planID = 2;
  string side = 3;
  uint32 orderNumber = 4;
  string orderType = 5;
  string orderTemplateID = 6;
  double balancePercent = 7;
  double limitPrice = 8;
  repeated TriggerRequest triggers = 9;
}

message GetUserOrderRequest {
  string orderID = 1;
  string userID = 2;
}

message GetUserOrdersRequest {
    string userID = 1;
}

message RemoveOrderRequest {
  string orderID = 1;
  string userID = 2;
}

message Order {
  string planID = 1;
  string orderID = 2;
  string side = 3;
  string orderTemplateID = 4;
  uint32 orderNumber = 5;
  string orderType = 6;
  double limitPrice = 7;
  double balancePercent = 8;
  string status = 9;
  uint32 parentOrderNumber = 10;
  string createdOn = 11;
  string updatedOn = 12;
  repeated Trigger triggers = 13;
}

message Trigger {
  string triggerID = 1;
  string orderID = 2;
  uint32 triggerNumber = 3;
  string triggerTemplateID = 4;
  string name = 5;
  string code = 6;
  bool triggered = 7;
  string createdOn = 8;
  string updatedOn = 9;
  repeated string actions = 10;
}

// Responses
//message Order {
//  string orderID = 1;
//  string userID = 2;
//  string keyID = 3;
//  string key = 4;
//  string secret = 5;
//  string exchange = 6;
//  string exchangeOrderID = 7;
//  string exchangeMarketName = 8;
//  string marketName = 9;
//  string side = 10;
//  string orderType = 11;
//  double price = 13;
//  double baseQuantity = 14;
//  double basePercent = 15;
//  double currencyQuantity = 16;
//  double currencyPercent = 17;
//  string status = 18;
//  string chainStatus = 19;
//  string conditions = 20;
//  string condition = 21;
//  string parentOrderID = 22;
//}

message UserOrderData {
  Order order = 1;
}

message UserOrdersData {
  repeated Order orders = 1;
}

message OrderResponse {
  string status = 1;
  string message = 2;
  UserOrderData data = 3;
}

message OrderListResponse {
  string status = 1;
  string message = 2;
  UserOrdersData data = 3;
}

message OrdersPage {
  uint32 page = 1;
  uint32 pageSize = 2; 
  uint32 total = 3;
  repeated Order orders = 4; 
}