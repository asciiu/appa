syntax = "proto3";

package order;

// Requests
message TriggerRequest {
  string triggerID = 1;
  string name = 2;
  string code = 3;
  string triggerTemplateID = 4;
  repeated string actions = 5;
}

message UpdateOrderRequest {
  string orderID = 1;
  string orderType = 2;
  string orderTemplateID = 3;
  string keyID = 4;
  string parentOrderID = 5;
  string planID = 6;
  string planDepth = 7;
  string exchange = 8;
  string marketName = 9;
  string side = 10;
  double limitPrice = 11;
  double percentBalance = 12;
  double baseBalance = 13;
  double currencyBalance = 14;
  string action = 15;
  repeated TriggerRequest triggers = 16;
}

message NewOrderRequest {
  string orderID = 1;
  string orderType = 2;
  string orderTemplateID = 3;
  string keyID = 4;
  string parentOrderID = 5;
  string planID = 6;
  string planDepth = 7;
  string exchange = 8;
  string marketName = 9;
  string side = 10;
  double limitPrice = 11;
  double percentBalance = 12;
  double baseBalance = 13;
  double currencyBalance = 14;
  repeated TriggerRequest triggers = 15;
}

message GetUserOrderRequest {
  string orderID = 1;
  string userID = 2;
}

message GetUserOrdersRequest {
    string userID = 1;
}

message RemoveOrderRequest {
  string orderID = 1;
  string userID = 2;
}

message Order {
  string orderID = 1;
  string parentOrderID = 2;
  string planID = 3;
  uint32 planDepth = 4;
  string orderTemplateID = 5;
  string keyID = 6;
  string orderType = 7;                // limit, market, paper
  string side = 8;                     // buy, sell
  double limitPrice = 9;               //  limit price is required for 'limit' order type
  string exchange = 10;
  string exchangeMarketName = 11;
  string marketName = 12;              // e.g. ADA-BTC
  string currencyName = 13;            // e.g. BTC
  double currencyBalance = 14;         // e.g. 1.0 
  double currencyTraded = 15;          // e.g. 0.0
  string status = 16;
  string createdOn = 17;
  string updatedOn = 18;
  repeated Trigger triggers = 19;
}

message Trigger {
  string triggerID = 1;
  string orderID = 2;
  uint32 triggerNumber = 3;
  string triggerTemplateID = 4;
  string name = 5;
  string code = 6;
  bool triggered = 7;
  string createdOn = 8;
  string updatedOn = 9;
  repeated string actions = 10;
}

// Responses
message UserOrderData {
  Order order = 1;
}

message UserOrdersData {
  repeated Order orders = 1;
}

message OrderResponse {
  string status = 1;
  string message = 2;
  UserOrderData data = 3;
}

message OrderListResponse {
  string status = 1;
  string message = 2;
  UserOrdersData data = 3;
}

message OrdersPage {
  uint32 page = 1;
  uint32 pageSize = 2; 
  uint32 total = 3;
  repeated Order orders = 4; 
}