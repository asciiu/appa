syntax = "proto3";

package fomo.plans; 

service PlanService {
  rpc AddPlan(PlanRequest) returns (PlanResponse) {}
  rpc GetUserPlan(GetUserPlanRequest) returns (PlanWithPagedOrdersResponse) {}
  rpc GetUserPlans(GetUserPlansRequest) returns (PlansPageResponse) {}
  //rpc DeletePlan(DeletePlanRequest) returns (PlanResponse) {}
  //rpc UpdatePlan(PlanRequest) returns (PlanResponse) {}
}

// Requests
message PlanRequest {
  string planID = 1;
  string userID = 2;
  string keyID = 3;
  string planTemplateID = 4;
  string exchange = 5;
  string marketName = 6;
  double baseBalance = 7;
  double currencyBalance = 8;
  string status = 9;
  repeated OrderRequest orders = 10; 
}

message OrderRequest {
  string side = 1;
  string orderType = 2;
  string orderTemplateID = 3;
  double basePercent = 4;
  double currencyPercent = 5;
  string conditions = 6;
  double price = 7;
}

message GetUserPlanRequest {
  string planID = 1;
  string userID = 2;
  uint32 page = 3;
  uint32 pageSize = 4;
}

message GetUserPlansRequest {
    string userID = 1;
    string exchange = 2; 
    string marketName = 3;
    string status = 4;
    uint32 page = 5;
    uint32 pageSize = 6;
}

message DeletePlanRequest {
  string planID = 1;
  string userID = 2;
}

// Responses
message Plan {
  string planID = 1;
  string planTemplateID = 2;
  string userID = 3;
  string keyID = 4;
  string key = 5;
  string keySecret = 6;
  string keyDescription = 7;
  string exchange = 8;
  string exchangeMarketName = 9;
  string marketName = 10;
  double baseBalance = 11;
  double currencyBalance = 12;
  string status = 13;
  repeated Order orders = 14; 
}

message PlanWithPagedOrders {
  string planID = 1;
  string planTemplateID = 2;
  string userID = 3;
  string keyID = 4;
  string key = 5;
  string keySecret = 6;
  string keyDescription = 7;
  string exchange = 8;
  string exchangeMarketName = 9;
  string marketName = 10;
  double baseBalance = 11;
  double currencyBalance = 12;
  string status = 13;
  OrdersPage ordersPage = 14;
}

message Order {
  string orderID = 1;
  string side = 2;
  string orderTemplateID = 3;
  int32 orderNumber = 4;
  string orderType = 5;
  double price = 6;
  double basePercent = 7;
  double currencyPercent = 8;
  string status = 9;
  string conditions = 10;
  string condition = 11; 
  string nextOrderID = 12;
}

message PlanData {
  Plan plan = 1;
}

message PlanResponse {
  string status = 1;
  string message = 2;
  PlanData data = 3;
}

message PlanWithPagedOrdersResponse {
  string status = 1;
  string message = 2;
  PlanWithPagedOrders data = 3;
}

message PlansPageResponse {
  string status = 1;
  string message = 2;
  PlansPage data = 3;
}

message OrdersPage {
  uint32 page = 1;
  uint32 pageSize = 2; 
  uint32 total = 3;
  repeated Order orders = 4; 
}

message PlansPage {
  uint32 page = 1;
  uint32 pageSize = 2; 
  uint32 total = 3;
  repeated Plan plans = 4; 
}