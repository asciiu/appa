syntax = "proto3";

package plan;
//import "order-service/proto/order/order.proto";
import "github.com/asciiu/gomo/plan-service/proto/order/order.proto";

service PlanService {
  rpc NewPlan(NewPlanRequest) returns (PlanResponse) {}
  rpc GetUserPlan(GetUserPlanRequest) returns (PlanResponse) {}
  rpc GetUserPlans(GetUserPlansRequest) returns (PlansPageResponse) {}
  rpc DeletePlan(DeletePlanRequest) returns (PlanResponse) {}
  rpc UpdatePlan(UpdatePlanRequest) returns (PlanResponse) {}
}

// Requests
message NewPlanRequest {
  string userID = 1;
  string userCurrencySymbol = 2;
  string initialTimestamp = 3;
  string title = 4;
  string planTemplateID = 5;
  string status = 6;
  bool closeOnComplete = 7;
  string committedCurrencySymbol = 8;
  double committedCurrencyAmount = 9;
  repeated order.NewOrderRequest orders = 10; 
}

message UpdatePlanRequest {
  string planID = 1;
  string userID = 2;
  string userCurrencySymbol = 3;
  string initialTimestamp = 4;
  string title = 5;
  string planTemplateID = 6;
  string status = 7;
  bool closeOnComplete = 8;
  string committedCurrencySymbol = 9;
  double committedCurrencyAmount = 10;
  repeated order.NewOrderRequest orders = 11; 
}


message GetUserPlanRequest {
  string planID = 1;
  string userID = 2;
  uint32 planDepth = 3;
  uint32 planLength = 4;
}

message GetUserPlansRequest {
    string userID = 1;
    string status = 2;
    uint32 page = 3;
    uint32 pageSize = 4;
}

message DeletePlanRequest {
  string planID = 1;
  string userID = 2;
}

// Responses
message Plan {
  string planID = 1;
  string planTemplateID = 2;
  string userID = 3;
  uint64 userPlanNumber = 4;
  string exchange = 5;
  string title = 6;
  uint32 totalDepth = 7;
  string userCurrencySymbol = 8;
  double userCurrencyBalanceAtInit = 9;
  string committedCurrencySymbol = 10;
  double committedCurrencyAmount = 11;
  string initialCurrencySymbol = 14;
  double initialCurrencyBalance = 15;
  string initialTimestamp = 16;
  uint32 lastExecutedPlanDepth = 17;
  string lastExecutedOrderID = 18;
  double referencePrice = 24;
  string status = 19;
  bool closeOnComplete = 20;
  string createdOn = 21;
  string updatedOn = 22;
  repeated order.Order orders = 23; 
}

message PlanData {
  Plan plan = 1;
}

message PlanResponse {
  string status = 1;
  string message = 2;
  PlanData data = 3;
}

message PlansPageResponse {
  string status = 1;
  string message = 2;
  PlansPage data = 3;
}

message PlansPage {
  uint32 page = 1;
  uint32 pageSize = 2; 
  uint32 total = 3;
  repeated Plan plans = 4; 
}