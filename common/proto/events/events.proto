syntax = "proto3";

package common.events; 

// Events 
message TradeEvent {
  string exchange = 1;
  string type = 2;
  string eventTime = 3;
  string marketName = 4;
  string tradeID = 5;
  double price = 6;
  double quantity = 7;
  double total = 8;
}

message TradeEvents {
  repeated TradeEvent events = 1;
}

message Auth {
  string key = 1;
  string secret = 2;
}

// this can be removed safely?
// message OrderEvent {
//   string exchange = 1;
//   string orderID = 2;
//   string userID = 3;
//   string keyID = 4;
//   string key = 5;
//   string secret = 6;
//   string marketName = 7;
//   string side = 8;
//   string orderType = 9;
//   string currency = 10;
//   double quantity = 11;
//   double price = 12;
//   string condition = 13;
//   string conditions = 14;
//   string exchangeOrderID = 15;
//   string exchangeMarketName = 16;
//   string status = 17;
// }

message ActiveOrderEvent {
  string exchange = 1;
  string orderID = 2;
  string planID = 3;
  string userID = 4;
  string nextOrderID = 5;
  double baseBalance = 6;
  double currencyBalance = 7;
  double balancePercent = 8;
  string keyID = 9;
  string key = 10;
  string secret = 11;
  string marketName = 12;
  string side = 13;
  string orderType = 14;
  double price = 15;
  bool revision = 16;      // this means that this order event should replace an active order in the system
  string orderStatus = 17; 
  repeated Trigger triggers = 18;
}

message Trigger {
  string triggerID = 1;
  string orderID = 2;
  string name = 5;
  string code = 6;
  bool triggered = 7;
  repeated string actions = 8;
}

message TriggeredOrderEvent {
  string exchange = 1;
  string orderID = 2;
  string planID = 3;
  string userID = 4;
  string nextOrderID = 5;
  double baseBalance = 6;
  double basePercent = 7;
  double currencyBalance = 8;
  double currencyPercent = 9;
  string keyID = 10;
  string key = 11;
  string secret = 12;
  string marketName = 13;
  string side = 14;
  string orderType = 15;
  double price = 16;
  double triggeredPrice = 17;
  string triggeredCondition = 18;
}

message CompletedOrderEvent {
  string orderID = 1;
  string planID = 2;
  string userID = 3;
  string nextOrderID = 4;
  double baseBalance = 5;
  double currencyBalance = 6;
  string currency = 7; 
  string side = 8;
  double quantity = 9; 
  double triggeredPrice = 10; 
  string triggeredCondition = 11;
  string exchangeOrderID = 12;
  string exchangeMarketName = 13;
  string status = 14;
  string details = 15;
}

message AbortedOrderEvent {
  string orderID = 1;
  string planID = 2;
}

message EngineStartEvent {
  string engineID = 1;
}