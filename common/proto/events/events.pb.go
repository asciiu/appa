// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/events/events.proto

/*
Package common_events is a generated protocol buffer package.

It is generated from these files:
	proto/events/events.proto

It has these top-level messages:
	ExchangeEvent
	Auth
	OrderEvent
*/
package common_events

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Events
type ExchangeEvent struct {
	Exchange   string `protobuf:"bytes,1,opt,name=exchange" json:"exchange,omitempty"`
	Type       string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	EventTime  uint64 `protobuf:"varint,3,opt,name=eventTime" json:"eventTime,omitempty"`
	MarketName string `protobuf:"bytes,4,opt,name=marketName" json:"marketName,omitempty"`
	TradeId    uint64 `protobuf:"varint,5,opt,name=tradeId" json:"tradeId,omitempty"`
	Price      string `protobuf:"bytes,6,opt,name=price" json:"price,omitempty"`
	Quantity   string `protobuf:"bytes,7,opt,name=quantity" json:"quantity,omitempty"`
	TradeTime  uint64 `protobuf:"varint,8,opt,name=tradeTime" json:"tradeTime,omitempty"`
}

func (m *ExchangeEvent) Reset()                    { *m = ExchangeEvent{} }
func (m *ExchangeEvent) String() string            { return proto.CompactTextString(m) }
func (*ExchangeEvent) ProtoMessage()               {}
func (*ExchangeEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ExchangeEvent) GetExchange() string {
	if m != nil {
		return m.Exchange
	}
	return ""
}

func (m *ExchangeEvent) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ExchangeEvent) GetEventTime() uint64 {
	if m != nil {
		return m.EventTime
	}
	return 0
}

func (m *ExchangeEvent) GetMarketName() string {
	if m != nil {
		return m.MarketName
	}
	return ""
}

func (m *ExchangeEvent) GetTradeId() uint64 {
	if m != nil {
		return m.TradeId
	}
	return 0
}

func (m *ExchangeEvent) GetPrice() string {
	if m != nil {
		return m.Price
	}
	return ""
}

func (m *ExchangeEvent) GetQuantity() string {
	if m != nil {
		return m.Quantity
	}
	return ""
}

func (m *ExchangeEvent) GetTradeTime() uint64 {
	if m != nil {
		return m.TradeTime
	}
	return 0
}

type Auth struct {
	Key    string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Secret string `protobuf:"bytes,2,opt,name=secret" json:"secret,omitempty"`
}

func (m *Auth) Reset()                    { *m = Auth{} }
func (m *Auth) String() string            { return proto.CompactTextString(m) }
func (*Auth) ProtoMessage()               {}
func (*Auth) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Auth) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Auth) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

type OrderEvent struct {
	Exchange              string  `protobuf:"bytes,1,opt,name=exchange" json:"exchange,omitempty"`
	OrderId               string  `protobuf:"bytes,2,opt,name=orderId" json:"orderId,omitempty"`
	UserId                string  `protobuf:"bytes,3,opt,name=userId" json:"userId,omitempty"`
	ApiKeyId              string  `protobuf:"bytes,4,opt,name=apiKeyId" json:"apiKeyId,omitempty"`
	MarketName            string  `protobuf:"bytes,5,opt,name=marketName" json:"marketName,omitempty"`
	Side                  string  `protobuf:"bytes,6,opt,name=side" json:"side,omitempty"`
	BaseQuantity          float64 `protobuf:"fixed64,7,opt,name=baseQuantity" json:"baseQuantity,omitempty"`
	BaseQuantityRemainder float64 `protobuf:"fixed64,8,opt,name=baseQuantityRemainder" json:"baseQuantityRemainder,omitempty"`
	Conditions            string  `protobuf:"bytes,9,opt,name=conditions" json:"conditions,omitempty"`
	ExchangeOrderId       string  `protobuf:"bytes,10,opt,name=exchangeOrderId" json:"exchangeOrderId,omitempty"`
	ExchangeMarketName    string  `protobuf:"bytes,11,opt,name=exchangeMarketName" json:"exchangeMarketName,omitempty"`
	Status                string  `protobuf:"bytes,12,opt,name=status" json:"status,omitempty"`
}

func (m *OrderEvent) Reset()                    { *m = OrderEvent{} }
func (m *OrderEvent) String() string            { return proto.CompactTextString(m) }
func (*OrderEvent) ProtoMessage()               {}
func (*OrderEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *OrderEvent) GetExchange() string {
	if m != nil {
		return m.Exchange
	}
	return ""
}

func (m *OrderEvent) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *OrderEvent) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *OrderEvent) GetApiKeyId() string {
	if m != nil {
		return m.ApiKeyId
	}
	return ""
}

func (m *OrderEvent) GetMarketName() string {
	if m != nil {
		return m.MarketName
	}
	return ""
}

func (m *OrderEvent) GetSide() string {
	if m != nil {
		return m.Side
	}
	return ""
}

func (m *OrderEvent) GetBaseQuantity() float64 {
	if m != nil {
		return m.BaseQuantity
	}
	return 0
}

func (m *OrderEvent) GetBaseQuantityRemainder() float64 {
	if m != nil {
		return m.BaseQuantityRemainder
	}
	return 0
}

func (m *OrderEvent) GetConditions() string {
	if m != nil {
		return m.Conditions
	}
	return ""
}

func (m *OrderEvent) GetExchangeOrderId() string {
	if m != nil {
		return m.ExchangeOrderId
	}
	return ""
}

func (m *OrderEvent) GetExchangeMarketName() string {
	if m != nil {
		return m.ExchangeMarketName
	}
	return ""
}

func (m *OrderEvent) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func init() {
	proto.RegisterType((*ExchangeEvent)(nil), "common.events.ExchangeEvent")
	proto.RegisterType((*Auth)(nil), "common.events.Auth")
	proto.RegisterType((*OrderEvent)(nil), "common.events.OrderEvent")
}

func init() { proto.RegisterFile("proto/events/events.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 369 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0xdd, 0x6a, 0xe3, 0x30,
	0x10, 0x85, 0xf1, 0xda, 0xf9, 0x9b, 0x4d, 0xd8, 0x65, 0xd8, 0x5d, 0xb4, 0xcb, 0x52, 0x82, 0xaf,
	0x72, 0x95, 0x16, 0xda, 0x17, 0xe8, 0x45, 0x2e, 0x42, 0x69, 0x43, 0x4d, 0x5f, 0x40, 0xb1, 0x86,
	0x46, 0x04, 0xff, 0x54, 0x96, 0x4b, 0xfd, 0x22, 0x7d, 0xc5, 0xbe, 0x46, 0xd1, 0x58, 0x4e, 0xd2,
	0x34, 0xd0, 0x2b, 0xeb, 0x7c, 0x9a, 0x19, 0xce, 0x1c, 0x19, 0xfe, 0x96, 0xa6, 0xb0, 0xc5, 0x39,
	0x3d, 0x53, 0x6e, 0x2b, 0xff, 0x99, 0x33, 0xc3, 0x49, 0x5a, 0x64, 0x59, 0x91, 0xcf, 0x5b, 0x18,
	0xbf, 0x05, 0x30, 0x59, 0xbc, 0xa4, 0x1b, 0x99, 0x3f, 0xd2, 0xc2, 0x21, 0xfc, 0x07, 0x43, 0xf2,
	0x40, 0x04, 0xd3, 0x60, 0x36, 0x4a, 0x76, 0x1a, 0x11, 0x22, 0xdb, 0x94, 0x24, 0xbe, 0x31, 0xe7,
	0x33, 0xfe, 0x87, 0x11, 0xcf, 0x7a, 0xd0, 0x19, 0x89, 0x70, 0x1a, 0xcc, 0xa2, 0x64, 0x0f, 0xf0,
	0x0c, 0x20, 0x93, 0x66, 0x4b, 0xf6, 0x4e, 0x66, 0x24, 0x22, 0xee, 0x3b, 0x20, 0x28, 0x60, 0x60,
	0x8d, 0x54, 0xb4, 0x54, 0xa2, 0xc7, 0xbd, 0x9d, 0xc4, 0x5f, 0xd0, 0x2b, 0x8d, 0x4e, 0x49, 0xf4,
	0xb9, 0xa9, 0x15, 0xce, 0xdd, 0x53, 0x2d, 0x73, 0xab, 0x6d, 0x23, 0x06, 0xad, 0xbb, 0x4e, 0x3b,
	0x27, 0xdc, 0xcc, 0x4e, 0x86, 0xad, 0x93, 0x1d, 0x88, 0x2f, 0x20, 0xba, 0xae, 0xed, 0x06, 0x7f,
	0x42, 0xb8, 0xa5, 0xc6, 0xaf, 0xe6, 0x8e, 0xf8, 0x07, 0xfa, 0x15, 0xa5, 0x86, 0xac, 0xdf, 0xcb,
	0xab, 0xf8, 0x35, 0x04, 0x58, 0x19, 0x45, 0xe6, 0xeb, 0x60, 0x04, 0x0c, 0x0a, 0x57, 0xb9, 0x54,
	0x7e, 0x46, 0x27, 0xdd, 0xf0, 0xba, 0xe2, 0x8b, 0xb0, 0x1d, 0xde, 0x2a, 0x37, 0x4d, 0x96, 0xfa,
	0x86, 0x9a, 0xa5, 0xf2, 0xb1, 0xec, 0xf4, 0x51, 0x68, 0xbd, 0x4f, 0xa1, 0x21, 0x44, 0x95, 0x56,
	0x5d, 0x32, 0x7c, 0xc6, 0x18, 0xc6, 0x6b, 0x59, 0xd1, 0xfd, 0x61, 0x38, 0x41, 0xf2, 0x81, 0xe1,
	0x15, 0xfc, 0x3e, 0xd4, 0x09, 0x65, 0x52, 0xe7, 0x8a, 0x0c, 0x87, 0x15, 0x24, 0xa7, 0x2f, 0x9d,
	0x9b, 0xb4, 0xc8, 0x95, 0xb6, 0xba, 0xc8, 0x2b, 0x31, 0x6a, 0xdd, 0xec, 0x09, 0xce, 0xe0, 0x47,
	0x97, 0xc3, 0xca, 0x67, 0x00, 0x5c, 0x74, 0x8c, 0x71, 0x0e, 0xd8, 0xa1, 0xdb, 0xfd, 0x7e, 0xdf,
	0xb9, 0xf8, 0xc4, 0x0d, 0x3f, 0x8c, 0x95, 0xb6, 0xae, 0xc4, 0xd8, 0x3f, 0x0c, 0xab, 0x75, 0x9f,
	0x7f, 0xe5, 0xcb, 0xf7, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa9, 0x1a, 0x8e, 0xad, 0xe7, 0x02, 0x00,
	0x00,
}
