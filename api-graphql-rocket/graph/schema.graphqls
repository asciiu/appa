scalar Int64 
scalar Time

type User {
  id: ID!
  username: String!
  avatarURL: String!
  email: String!
  emailVerified: Boolean!
  passwordHash: String!
}

type Token {
  jwt: String 
  refresh: String
}

type TokenUser {
  user: User
  token: Token
}

input MessageInput {
  userID: String!
  username: String!
  text: String!
  avatarURL: String!
}

type Message {
  id: String !
  userID: String!
  username: String!
  text: String!
  type: String!
  avatarURL: String!
  createdAt: Time !
}

type Query {
  #users: [User!]!
  messages: [Message!]!
  users: [String!]!
}

type Mutation {
  signup(email: String!, username: String!, password: String!): User
  signin(email: String!, password: String!, remember: Boolean!): TokenUser
  postMessage(input: MessageInput): Message
}

type Subscription {
  messagePosted(user: String!): Message!
  userJoined(user: String!): String!
}