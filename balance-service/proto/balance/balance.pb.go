// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/balance/balance.proto

/*
Package go_micro_srv_balance is a generated protocol buffer package.

It is generated from these files:
	proto/balance/balance.proto

It has these top-level messages:
	GetUserBalanceRequest
	GetUserBalancesRequest
	AccountBalances
	Balance
	BalanceDerp
	UserBalanceData
	UserBalancesData
	BalanceResponse
	BalancesResponse
*/
package go_micro_srv_balance

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Requests
type GetUserBalanceRequest struct {
	UserId   string `protobuf:"bytes,1,opt,name=userId" json:"userId,omitempty"`
	ApiKeyId string `protobuf:"bytes,2,opt,name=apiKeyId" json:"apiKeyId,omitempty"`
	Currency string `protobuf:"bytes,3,opt,name=currency" json:"currency,omitempty"`
}

func (m *GetUserBalanceRequest) Reset()                    { *m = GetUserBalanceRequest{} }
func (m *GetUserBalanceRequest) String() string            { return proto.CompactTextString(m) }
func (*GetUserBalanceRequest) ProtoMessage()               {}
func (*GetUserBalanceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetUserBalanceRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *GetUserBalanceRequest) GetApiKeyId() string {
	if m != nil {
		return m.ApiKeyId
	}
	return ""
}

func (m *GetUserBalanceRequest) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

type GetUserBalancesRequest struct {
	UserId   string `protobuf:"bytes,1,opt,name=userId" json:"userId,omitempty"`
	ApiKeyId string `protobuf:"bytes,2,opt,name=apiKeyId" json:"apiKeyId,omitempty"`
}

func (m *GetUserBalancesRequest) Reset()                    { *m = GetUserBalancesRequest{} }
func (m *GetUserBalancesRequest) String() string            { return proto.CompactTextString(m) }
func (*GetUserBalancesRequest) ProtoMessage()               {}
func (*GetUserBalancesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetUserBalancesRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *GetUserBalancesRequest) GetApiKeyId() string {
	if m != nil {
		return m.ApiKeyId
	}
	return ""
}

type AccountBalances struct {
	UserId   string     `protobuf:"bytes,1,opt,name=userId" json:"userId,omitempty"`
	ApiKeyId string     `protobuf:"bytes,2,opt,name=apiKeyId" json:"apiKeyId,omitempty"`
	Exchange string     `protobuf:"bytes,3,opt,name=exchange" json:"exchange,omitempty"`
	Balances []*Balance `protobuf:"bytes,4,rep,name=balances" json:"balances,omitempty"`
}

func (m *AccountBalances) Reset()                    { *m = AccountBalances{} }
func (m *AccountBalances) String() string            { return proto.CompactTextString(m) }
func (*AccountBalances) ProtoMessage()               {}
func (*AccountBalances) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *AccountBalances) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *AccountBalances) GetApiKeyId() string {
	if m != nil {
		return m.ApiKeyId
	}
	return ""
}

func (m *AccountBalances) GetExchange() string {
	if m != nil {
		return m.Exchange
	}
	return ""
}

func (m *AccountBalances) GetBalances() []*Balance {
	if m != nil {
		return m.Balances
	}
	return nil
}

type Balance struct {
	Currency string  `protobuf:"bytes,1,opt,name=currency" json:"currency,omitempty"`
	Free     float64 `protobuf:"fixed64,2,opt,name=free" json:"free,omitempty"`
	Locked   float64 `protobuf:"fixed64,3,opt,name=locked" json:"locked,omitempty"`
}

func (m *Balance) Reset()                    { *m = Balance{} }
func (m *Balance) String() string            { return proto.CompactTextString(m) }
func (*Balance) ProtoMessage()               {}
func (*Balance) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Balance) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *Balance) GetFree() float64 {
	if m != nil {
		return m.Free
	}
	return 0
}

func (m *Balance) GetLocked() float64 {
	if m != nil {
		return m.Locked
	}
	return 0
}

// Responses
type BalanceDerp struct {
	Id                string  `protobuf:"bytes,1,opt,name=Id" json:"Id,omitempty"`
	UserId            string  `protobuf:"bytes,2,opt,name=userId" json:"userId,omitempty"`
	UserKeyId         string  `protobuf:"bytes,3,opt,name=userKeyId" json:"userKeyId,omitempty"`
	Exchange          string  `protobuf:"bytes,4,opt,name=exchange" json:"exchange,omitempty"`
	Currency          string  `protobuf:"bytes,5,opt,name=currency" json:"currency,omitempty"`
	Available         float64 `protobuf:"fixed64,6,opt,name=available" json:"available,omitempty"`
	Locked            float64 `protobuf:"fixed64,7,opt,name=locked" json:"locked,omitempty"`
	ExchangeTotal     float64 `protobuf:"fixed64,8,opt,name=exchangeTotal" json:"exchangeTotal,omitempty"`
	ExchangeAvailable float64 `protobuf:"fixed64,9,opt,name=exchangeAvailable" json:"exchangeAvailable,omitempty"`
	ExchangedLocked   float64 `protobuf:"fixed64,10,opt,name=exchangedLocked" json:"exchangedLocked,omitempty"`
}

func (m *BalanceDerp) Reset()                    { *m = BalanceDerp{} }
func (m *BalanceDerp) String() string            { return proto.CompactTextString(m) }
func (*BalanceDerp) ProtoMessage()               {}
func (*BalanceDerp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *BalanceDerp) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *BalanceDerp) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *BalanceDerp) GetUserKeyId() string {
	if m != nil {
		return m.UserKeyId
	}
	return ""
}

func (m *BalanceDerp) GetExchange() string {
	if m != nil {
		return m.Exchange
	}
	return ""
}

func (m *BalanceDerp) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *BalanceDerp) GetAvailable() float64 {
	if m != nil {
		return m.Available
	}
	return 0
}

func (m *BalanceDerp) GetLocked() float64 {
	if m != nil {
		return m.Locked
	}
	return 0
}

func (m *BalanceDerp) GetExchangeTotal() float64 {
	if m != nil {
		return m.ExchangeTotal
	}
	return 0
}

func (m *BalanceDerp) GetExchangeAvailable() float64 {
	if m != nil {
		return m.ExchangeAvailable
	}
	return 0
}

func (m *BalanceDerp) GetExchangedLocked() float64 {
	if m != nil {
		return m.ExchangedLocked
	}
	return 0
}

type UserBalanceData struct {
	Balance *BalanceDerp `protobuf:"bytes,1,opt,name=balance" json:"balance,omitempty"`
}

func (m *UserBalanceData) Reset()                    { *m = UserBalanceData{} }
func (m *UserBalanceData) String() string            { return proto.CompactTextString(m) }
func (*UserBalanceData) ProtoMessage()               {}
func (*UserBalanceData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *UserBalanceData) GetBalance() *BalanceDerp {
	if m != nil {
		return m.Balance
	}
	return nil
}

type UserBalancesData struct {
	Balances []*BalanceDerp `protobuf:"bytes,1,rep,name=balances" json:"balances,omitempty"`
}

func (m *UserBalancesData) Reset()                    { *m = UserBalancesData{} }
func (m *UserBalancesData) String() string            { return proto.CompactTextString(m) }
func (*UserBalancesData) ProtoMessage()               {}
func (*UserBalancesData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *UserBalancesData) GetBalances() []*BalanceDerp {
	if m != nil {
		return m.Balances
	}
	return nil
}

type BalanceResponse struct {
	Status  string           `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Message string           `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Data    *UserBalanceData `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *BalanceResponse) Reset()                    { *m = BalanceResponse{} }
func (m *BalanceResponse) String() string            { return proto.CompactTextString(m) }
func (*BalanceResponse) ProtoMessage()               {}
func (*BalanceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *BalanceResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *BalanceResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *BalanceResponse) GetData() *UserBalanceData {
	if m != nil {
		return m.Data
	}
	return nil
}

type BalancesResponse struct {
	Status  string            `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Message string            `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Data    *UserBalancesData `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *BalancesResponse) Reset()                    { *m = BalancesResponse{} }
func (m *BalancesResponse) String() string            { return proto.CompactTextString(m) }
func (*BalancesResponse) ProtoMessage()               {}
func (*BalancesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *BalancesResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *BalancesResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *BalancesResponse) GetData() *UserBalancesData {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*GetUserBalanceRequest)(nil), "go.micro.srv.balance.GetUserBalanceRequest")
	proto.RegisterType((*GetUserBalancesRequest)(nil), "go.micro.srv.balance.GetUserBalancesRequest")
	proto.RegisterType((*AccountBalances)(nil), "go.micro.srv.balance.AccountBalances")
	proto.RegisterType((*Balance)(nil), "go.micro.srv.balance.Balance")
	proto.RegisterType((*BalanceDerp)(nil), "go.micro.srv.balance.BalanceDerp")
	proto.RegisterType((*UserBalanceData)(nil), "go.micro.srv.balance.UserBalanceData")
	proto.RegisterType((*UserBalancesData)(nil), "go.micro.srv.balance.UserBalancesData")
	proto.RegisterType((*BalanceResponse)(nil), "go.micro.srv.balance.BalanceResponse")
	proto.RegisterType((*BalancesResponse)(nil), "go.micro.srv.balance.BalancesResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for BalanceService service

type BalanceServiceClient interface {
	GetUserBalance(ctx context.Context, in *GetUserBalanceRequest, opts ...client.CallOption) (*BalanceResponse, error)
	GetUserBalances(ctx context.Context, in *GetUserBalancesRequest, opts ...client.CallOption) (*BalancesResponse, error)
}

type balanceServiceClient struct {
	c           client.Client
	serviceName string
}

func NewBalanceServiceClient(serviceName string, c client.Client) BalanceServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "go.micro.srv.balance"
	}
	return &balanceServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *balanceServiceClient) GetUserBalance(ctx context.Context, in *GetUserBalanceRequest, opts ...client.CallOption) (*BalanceResponse, error) {
	req := c.c.NewRequest(c.serviceName, "BalanceService.GetUserBalance", in)
	out := new(BalanceResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *balanceServiceClient) GetUserBalances(ctx context.Context, in *GetUserBalancesRequest, opts ...client.CallOption) (*BalancesResponse, error) {
	req := c.c.NewRequest(c.serviceName, "BalanceService.GetUserBalances", in)
	out := new(BalancesResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for BalanceService service

type BalanceServiceHandler interface {
	GetUserBalance(context.Context, *GetUserBalanceRequest, *BalanceResponse) error
	GetUserBalances(context.Context, *GetUserBalancesRequest, *BalancesResponse) error
}

func RegisterBalanceServiceHandler(s server.Server, hdlr BalanceServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&BalanceService{hdlr}, opts...))
}

type BalanceService struct {
	BalanceServiceHandler
}

func (h *BalanceService) GetUserBalance(ctx context.Context, in *GetUserBalanceRequest, out *BalanceResponse) error {
	return h.BalanceServiceHandler.GetUserBalance(ctx, in, out)
}

func (h *BalanceService) GetUserBalances(ctx context.Context, in *GetUserBalancesRequest, out *BalancesResponse) error {
	return h.BalanceServiceHandler.GetUserBalances(ctx, in, out)
}

func init() { proto.RegisterFile("proto/balance/balance.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 520 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0xdb, 0x6e, 0xd3, 0x40,
	0x10, 0xc5, 0x6e, 0xc8, 0x65, 0x22, 0xe2, 0xb2, 0x82, 0xca, 0x0a, 0x45, 0x2a, 0x2b, 0x5a, 0x45,
	0xa2, 0x32, 0x52, 0x78, 0x2a, 0x88, 0x87, 0xa2, 0x4a, 0x28, 0xa2, 0x42, 0xaa, 0x81, 0x0f, 0xd8,
	0xac, 0xa7, 0xc1, 0xc2, 0xb5, 0xc3, 0xee, 0x3a, 0xa2, 0x2f, 0x88, 0x0f, 0xe1, 0x5f, 0xf8, 0x18,
	0x7e, 0x04, 0x65, 0xbd, 0xeb, 0x1b, 0x51, 0xa8, 0xca, 0x53, 0x32, 0x67, 0xd6, 0x33, 0xe7, 0x9c,
	0x9d, 0x1d, 0x78, 0xb4, 0x14, 0x99, 0xca, 0x9e, 0xcf, 0x59, 0xc2, 0x52, 0x8e, 0xf6, 0x37, 0xd0,
	0x28, 0x79, 0xb0, 0xc8, 0x82, 0xab, 0x98, 0x8b, 0x2c, 0x90, 0x62, 0x15, 0x98, 0x1c, 0x5d, 0xc0,
	0xc3, 0xb7, 0xa8, 0x3e, 0x49, 0x14, 0x6f, 0x0a, 0x24, 0xc4, 0xaf, 0x39, 0x4a, 0x45, 0xf6, 0xa0,
	0x9b, 0x4b, 0x14, 0xb3, 0xc8, 0x77, 0x0e, 0x9c, 0xc9, 0x20, 0x34, 0x11, 0x19, 0x43, 0x9f, 0x2d,
	0xe3, 0x77, 0x78, 0x3d, 0x8b, 0x7c, 0x57, 0x67, 0xca, 0x78, 0x9d, 0xe3, 0xb9, 0x10, 0x98, 0xf2,
	0x6b, 0x7f, 0xa7, 0xc8, 0xd9, 0x98, 0x9e, 0xc3, 0x5e, 0xb3, 0x91, 0xfc, 0x8f, 0x4e, 0xf4, 0xa7,
	0x03, 0xde, 0x29, 0xe7, 0x59, 0x9e, 0x2a, 0x5b, 0xee, 0xb6, 0x8c, 0xf1, 0x1b, 0xff, 0xcc, 0xd2,
	0x05, 0x5a, 0xc6, 0x36, 0x26, 0x27, 0xd0, 0x37, 0x2e, 0x49, 0xbf, 0x73, 0xb0, 0x33, 0x19, 0x4e,
	0x1f, 0x07, 0x9b, 0x3c, 0x0c, 0xac, 0x73, 0xe5, 0x71, 0x7a, 0x01, 0x3d, 0x03, 0x36, 0x3c, 0x71,
	0x9a, 0x9e, 0x10, 0x02, 0x9d, 0x4b, 0x81, 0xa8, 0x59, 0x39, 0xa1, 0xfe, 0xbf, 0x56, 0x91, 0x64,
	0xfc, 0x0b, 0x46, 0x9a, 0x8f, 0x13, 0x9a, 0x88, 0xfe, 0x72, 0x61, 0x68, 0x6a, 0x9e, 0xa1, 0x58,
	0x92, 0x11, 0xb8, 0xa5, 0x52, 0x77, 0x16, 0xd5, 0xd4, 0xbb, 0x0d, 0xf5, 0xfb, 0x30, 0x58, 0xff,
	0x2b, 0xe4, 0x17, 0x12, 0x2b, 0xa0, 0xa1, 0xbf, 0xd3, 0xd2, 0x5f, 0x67, 0x7e, 0xb7, 0xc5, 0x7c,
	0x1f, 0x06, 0x6c, 0xc5, 0xe2, 0x84, 0xcd, 0x13, 0xf4, 0xbb, 0x9a, 0x68, 0x05, 0xd4, 0x34, 0xf4,
	0xea, 0x1a, 0xc8, 0x53, 0xb8, 0x67, 0xab, 0x7f, 0xcc, 0x14, 0x4b, 0xfc, 0xbe, 0x4e, 0x37, 0x41,
	0x72, 0x0c, 0xf7, 0x2d, 0x70, 0x5a, 0xf6, 0x18, 0xe8, 0x93, 0x7f, 0x27, 0xc8, 0x04, 0x3c, 0x0b,
	0x46, 0xe7, 0x45, 0x53, 0xd0, 0x67, 0xdb, 0x30, 0x7d, 0x0f, 0x5e, 0x6d, 0xfc, 0xce, 0x98, 0x62,
	0xe4, 0x15, 0xf4, 0xcc, 0x9d, 0x69, 0x27, 0x87, 0xd3, 0x27, 0x5b, 0x6f, 0x78, 0x6d, 0x7c, 0x68,
	0xbf, 0xa0, 0x17, 0xb0, 0x5b, 0x1f, 0x67, 0x5d, 0xf0, 0x75, 0x6d, 0x66, 0x1c, 0x3d, 0x33, 0x37,
	0xa8, 0x58, 0xcd, 0xcd, 0x77, 0xf0, 0xca, 0x67, 0x28, 0x97, 0x59, 0x2a, 0xb5, 0x97, 0x52, 0x31,
	0x95, 0x4b, 0x3b, 0xd5, 0x45, 0x44, 0x7c, 0xe8, 0x5d, 0xa1, 0x94, 0x6c, 0x81, 0xe6, 0xc2, 0x6d,
	0x48, 0x4e, 0xa0, 0x13, 0x31, 0xc5, 0xf4, 0x65, 0x0f, 0xa7, 0x87, 0x9b, 0xfb, 0xb7, 0x9c, 0x08,
	0xf5, 0x27, 0xf4, 0x87, 0x03, 0xbb, 0xd5, 0xf3, 0xbc, 0x35, 0x83, 0x97, 0x0d, 0x06, 0x47, 0xff,
	0x64, 0x20, 0x2b, 0x0a, 0xd3, 0xdf, 0x0e, 0x8c, 0x0c, 0xfc, 0x01, 0xc5, 0x2a, 0xe6, 0x48, 0x2e,
	0x61, 0xd4, 0x5c, 0x1d, 0xe4, 0xd9, 0xe6, 0x92, 0x1b, 0x37, 0xd9, 0xf8, 0x70, 0xfb, 0xab, 0x35,
	0x32, 0xe9, 0x1d, 0x12, 0x83, 0xd7, 0x5a, 0x51, 0xe4, 0xf8, 0x26, 0x8d, 0xec, 0x26, 0x1b, 0x1f,
	0x6d, 0xed, 0x24, 0xab, 0x56, 0xf3, 0xae, 0xde, 0xc9, 0x2f, 0xfe, 0x04, 0x00, 0x00, 0xff, 0xff,
	0x92, 0x88, 0xf7, 0x4e, 0xb2, 0x05, 0x00, 0x00,
}
