// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/balance/balance.proto

/*
Package go_micro_srv_balance is a generated protocol buffer package.

It is generated from these files:
	proto/balance/balance.proto

It has these top-level messages:
	GetUserBalanceRequest
	GetUserBalancesRequest
	AccountBalances
	Balance
	UserBalanceData
	BalanceResponse
	BalancesResponse
*/
package go_micro_srv_balance

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Requests
type GetUserBalanceRequest struct {
	UserID   string `protobuf:"bytes,1,opt,name=userID" json:"userID"`
	KeyID    string `protobuf:"bytes,2,opt,name=keyID" json:"keyID"`
	Currency string `protobuf:"bytes,3,opt,name=currency" json:"currency"`
}

func (m *GetUserBalanceRequest) Reset()                    { *m = GetUserBalanceRequest{} }
func (m *GetUserBalanceRequest) String() string            { return proto.CompactTextString(m) }
func (*GetUserBalanceRequest) ProtoMessage()               {}
func (*GetUserBalanceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetUserBalanceRequest) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *GetUserBalanceRequest) GetKeyID() string {
	if m != nil {
		return m.KeyID
	}
	return ""
}

func (m *GetUserBalanceRequest) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

type GetUserBalancesRequest struct {
	UserID string `protobuf:"bytes,1,opt,name=userID" json:"userID"`
	KeyID  string `protobuf:"bytes,2,opt,name=keyID" json:"keyID"`
	Symbol string `protobuf:"bytes,3,opt,name=symbol" json:"symbol"`
}

func (m *GetUserBalancesRequest) Reset()                    { *m = GetUserBalancesRequest{} }
func (m *GetUserBalancesRequest) String() string            { return proto.CompactTextString(m) }
func (*GetUserBalancesRequest) ProtoMessage()               {}
func (*GetUserBalancesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetUserBalancesRequest) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *GetUserBalancesRequest) GetKeyID() string {
	if m != nil {
		return m.KeyID
	}
	return ""
}

func (m *GetUserBalancesRequest) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

type AccountBalances struct {
	Balances []*Balance `protobuf:"bytes,4,rep,name=balances" json:"balances"`
}

func (m *AccountBalances) Reset()                    { *m = AccountBalances{} }
func (m *AccountBalances) String() string            { return proto.CompactTextString(m) }
func (*AccountBalances) ProtoMessage()               {}
func (*AccountBalances) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *AccountBalances) GetBalances() []*Balance {
	if m != nil {
		return m.Balances
	}
	return nil
}

// Responses
type Balance struct {
	ID                string  `protobuf:"bytes,1,opt,name=ID" json:"ID"`
	UserID            string  `protobuf:"bytes,2,opt,name=userID" json:"userID"`
	KeyID             string  `protobuf:"bytes,3,opt,name=keyID" json:"keyID"`
	ExchangeName      string  `protobuf:"bytes,4,opt,name=exchangeName" json:"exchangeName"`
	CurrencyName      string  `protobuf:"bytes,5,opt,name=currencyName" json:"currencyName"`
	Available         float64 `protobuf:"fixed64,6,opt,name=available" json:"available"`
	Locked            float64 `protobuf:"fixed64,7,opt,name=locked" json:"locked"`
	ExchangeTotal     float64 `protobuf:"fixed64,8,opt,name=exchangeTotal" json:"exchangeTotal"`
	ExchangeAvailable float64 `protobuf:"fixed64,9,opt,name=exchangeAvailable" json:"exchangeAvailable"`
	ExchangeLocked    float64 `protobuf:"fixed64,10,opt,name=exchangeLocked" json:"exchangeLocked"`
}

func (m *Balance) Reset()                    { *m = Balance{} }
func (m *Balance) String() string            { return proto.CompactTextString(m) }
func (*Balance) ProtoMessage()               {}
func (*Balance) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Balance) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Balance) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *Balance) GetKeyID() string {
	if m != nil {
		return m.KeyID
	}
	return ""
}

func (m *Balance) GetExchangeName() string {
	if m != nil {
		return m.ExchangeName
	}
	return ""
}

func (m *Balance) GetCurrencyName() string {
	if m != nil {
		return m.CurrencyName
	}
	return ""
}

func (m *Balance) GetAvailable() float64 {
	if m != nil {
		return m.Available
	}
	return 0
}

func (m *Balance) GetLocked() float64 {
	if m != nil {
		return m.Locked
	}
	return 0
}

func (m *Balance) GetExchangeTotal() float64 {
	if m != nil {
		return m.ExchangeTotal
	}
	return 0
}

func (m *Balance) GetExchangeAvailable() float64 {
	if m != nil {
		return m.ExchangeAvailable
	}
	return 0
}

func (m *Balance) GetExchangeLocked() float64 {
	if m != nil {
		return m.ExchangeLocked
	}
	return 0
}

type UserBalanceData struct {
	Balance *Balance `protobuf:"bytes,1,opt,name=balance" json:"balance"`
}

func (m *UserBalanceData) Reset()                    { *m = UserBalanceData{} }
func (m *UserBalanceData) String() string            { return proto.CompactTextString(m) }
func (*UserBalanceData) ProtoMessage()               {}
func (*UserBalanceData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *UserBalanceData) GetBalance() *Balance {
	if m != nil {
		return m.Balance
	}
	return nil
}

type BalanceResponse struct {
	Status  string           `protobuf:"bytes,1,opt,name=status" json:"status"`
	Message string           `protobuf:"bytes,2,opt,name=message" json:"message"`
	Data    *UserBalanceData `protobuf:"bytes,3,opt,name=data" json:"data"`
}

func (m *BalanceResponse) Reset()                    { *m = BalanceResponse{} }
func (m *BalanceResponse) String() string            { return proto.CompactTextString(m) }
func (*BalanceResponse) ProtoMessage()               {}
func (*BalanceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *BalanceResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *BalanceResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *BalanceResponse) GetData() *UserBalanceData {
	if m != nil {
		return m.Data
	}
	return nil
}

type BalancesResponse struct {
	Status  string           `protobuf:"bytes,1,opt,name=status" json:"status"`
	Message string           `protobuf:"bytes,2,opt,name=message" json:"message"`
	Data    *AccountBalances `protobuf:"bytes,3,opt,name=data" json:"data"`
}

func (m *BalancesResponse) Reset()                    { *m = BalancesResponse{} }
func (m *BalancesResponse) String() string            { return proto.CompactTextString(m) }
func (*BalancesResponse) ProtoMessage()               {}
func (*BalancesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *BalancesResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *BalancesResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *BalancesResponse) GetData() *AccountBalances {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*GetUserBalanceRequest)(nil), "go.micro.srv.balance.GetUserBalanceRequest")
	proto.RegisterType((*GetUserBalancesRequest)(nil), "go.micro.srv.balance.GetUserBalancesRequest")
	proto.RegisterType((*AccountBalances)(nil), "go.micro.srv.balance.AccountBalances")
	proto.RegisterType((*Balance)(nil), "go.micro.srv.balance.Balance")
	proto.RegisterType((*UserBalanceData)(nil), "go.micro.srv.balance.UserBalanceData")
	proto.RegisterType((*BalanceResponse)(nil), "go.micro.srv.balance.BalanceResponse")
	proto.RegisterType((*BalancesResponse)(nil), "go.micro.srv.balance.BalancesResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for BalanceService service

type BalanceServiceClient interface {
	GetUserBalance(ctx context.Context, in *GetUserBalanceRequest, opts ...client.CallOption) (*BalanceResponse, error)
	GetUserBalances(ctx context.Context, in *GetUserBalancesRequest, opts ...client.CallOption) (*BalancesResponse, error)
}

type balanceServiceClient struct {
	c           client.Client
	serviceName string
}

func NewBalanceServiceClient(serviceName string, c client.Client) BalanceServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "go.micro.srv.balance"
	}
	return &balanceServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *balanceServiceClient) GetUserBalance(ctx context.Context, in *GetUserBalanceRequest, opts ...client.CallOption) (*BalanceResponse, error) {
	req := c.c.NewRequest(c.serviceName, "BalanceService.GetUserBalance", in)
	out := new(BalanceResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *balanceServiceClient) GetUserBalances(ctx context.Context, in *GetUserBalancesRequest, opts ...client.CallOption) (*BalancesResponse, error) {
	req := c.c.NewRequest(c.serviceName, "BalanceService.GetUserBalances", in)
	out := new(BalancesResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for BalanceService service

type BalanceServiceHandler interface {
	GetUserBalance(context.Context, *GetUserBalanceRequest, *BalanceResponse) error
	GetUserBalances(context.Context, *GetUserBalancesRequest, *BalancesResponse) error
}

func RegisterBalanceServiceHandler(s server.Server, hdlr BalanceServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&BalanceService{hdlr}, opts...))
}

type BalanceService struct {
	BalanceServiceHandler
}

func (h *BalanceService) GetUserBalance(ctx context.Context, in *GetUserBalanceRequest, out *BalanceResponse) error {
	return h.BalanceServiceHandler.GetUserBalance(ctx, in, out)
}

func (h *BalanceService) GetUserBalances(ctx context.Context, in *GetUserBalancesRequest, out *BalancesResponse) error {
	return h.BalanceServiceHandler.GetUserBalances(ctx, in, out)
}

func init() { proto.RegisterFile("proto/balance/balance.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 464 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0x5d, 0x6b, 0x13, 0x41,
	0x14, 0x75, 0x37, 0x69, 0x3e, 0x6e, 0x35, 0xd1, 0x4b, 0x0d, 0x43, 0x54, 0x08, 0x83, 0x2d, 0x01,
	0xcb, 0x0a, 0xf1, 0x41, 0xfa, 0x58, 0x09, 0x48, 0xa5, 0xf8, 0x10, 0xf5, 0x55, 0x98, 0x4c, 0xaf,
	0x31, 0x74, 0xb3, 0x53, 0x67, 0x66, 0x83, 0x79, 0xd1, 0xdf, 0xe6, 0x6f, 0xf1, 0x8f, 0x48, 0x67,
	0x67, 0x36, 0x1f, 0x2e, 0x51, 0x04, 0x9f, 0xc2, 0x3d, 0xf7, 0x64, 0xce, 0xb9, 0x5f, 0x0b, 0x8f,
	0x6e, 0xb4, 0xb2, 0xea, 0xf9, 0x54, 0xa4, 0x22, 0x93, 0x14, 0x7e, 0x13, 0x87, 0xe2, 0xd1, 0x4c,
	0x25, 0x8b, 0xb9, 0xd4, 0x2a, 0x31, 0x7a, 0x99, 0xf8, 0x1c, 0x17, 0xf0, 0xf0, 0x35, 0xd9, 0x0f,
	0x86, 0xf4, 0xab, 0x02, 0x99, 0xd0, 0x97, 0x9c, 0x8c, 0xc5, 0x1e, 0x34, 0x72, 0x43, 0xfa, 0x62,
	0xcc, 0xa2, 0x41, 0x34, 0x6c, 0x4f, 0x7c, 0x84, 0x47, 0x70, 0x70, 0x4d, 0xab, 0x8b, 0x31, 0x8b,
	0x1d, 0x5c, 0x04, 0xd8, 0x87, 0x96, 0xcc, 0xb5, 0xa6, 0x4c, 0xae, 0x58, 0xcd, 0x25, 0xca, 0x98,
	0x7f, 0x84, 0xde, 0xb6, 0x84, 0xf9, 0x37, 0x8d, 0x1e, 0x34, 0xcc, 0x6a, 0x31, 0x55, 0xa9, 0x57,
	0xf0, 0x11, 0xbf, 0x84, 0xee, 0xb9, 0x94, 0x2a, 0xcf, 0x6c, 0x78, 0x1f, 0xcf, 0xa0, 0xe5, 0x0b,
	0x34, 0xac, 0x3e, 0xa8, 0x0d, 0x0f, 0x47, 0x4f, 0x92, 0xaa, 0xf2, 0x93, 0x50, 0x74, 0x49, 0xe7,
	0x3f, 0x62, 0x68, 0x7a, 0x14, 0x3b, 0x10, 0x97, 0xde, 0xe2, 0xc2, 0x81, 0xf7, 0x1b, 0x57, 0xfb,
	0xad, 0x6d, 0xfa, 0xe5, 0x70, 0x97, 0xbe, 0xca, 0xcf, 0x22, 0x9b, 0xd1, 0x5b, 0xb1, 0x20, 0x56,
	0x77, 0xc9, 0x2d, 0xec, 0x96, 0x13, 0xfa, 0xe4, 0x38, 0x07, 0x05, 0x67, 0x13, 0xc3, 0xc7, 0xd0,
	0x16, 0x4b, 0x31, 0x4f, 0xc5, 0x34, 0x25, 0xd6, 0x18, 0x44, 0xc3, 0x68, 0xb2, 0x06, 0x6e, 0x3d,
	0xa5, 0x4a, 0x5e, 0xd3, 0x15, 0x6b, 0xba, 0x94, 0x8f, 0xf0, 0x29, 0xdc, 0x0b, 0x4a, 0xef, 0x95,
	0x15, 0x29, 0x6b, 0xb9, 0xf4, 0x36, 0x88, 0xa7, 0xf0, 0x20, 0x00, 0xe7, 0xa5, 0x46, 0xdb, 0x31,
	0x7f, 0x4f, 0xe0, 0x09, 0x74, 0x02, 0x78, 0x59, 0x68, 0x82, 0xa3, 0xee, 0xa0, 0xfc, 0x0d, 0x74,
	0x37, 0xc6, 0x3d, 0x16, 0x56, 0xe0, 0x4b, 0x68, 0xfa, 0x16, 0xbb, 0x7e, 0xfe, 0x71, 0x20, 0x81,
	0xcd, 0xbf, 0x41, 0xb7, 0xdc, 0x4c, 0x73, 0xa3, 0x32, 0xe3, 0x4a, 0x36, 0x56, 0xd8, 0xdc, 0x84,
	0xb5, 0x29, 0x22, 0x64, 0xd0, 0x5c, 0x90, 0x31, 0x62, 0x46, 0x7e, 0x3e, 0x21, 0xc4, 0x33, 0xa8,
	0x5f, 0x09, 0x2b, 0xdc, 0x7c, 0x0e, 0x47, 0xc7, 0xd5, 0xd2, 0x3b, 0x96, 0x27, 0xee, 0x2f, 0xfc,
	0x3b, 0xdc, 0x5f, 0xaf, 0xed, 0xff, 0x35, 0xb0, 0xb3, 0xc5, 0x85, 0x81, 0xd1, 0xcf, 0x08, 0x3a,
	0x1e, 0x7a, 0x47, 0x7a, 0x39, 0x97, 0x84, 0x9f, 0xa0, 0xb3, 0x7d, 0x51, 0xf8, 0xac, 0xfa, 0xc5,
	0xca, 0xd3, 0xee, 0x1f, 0xef, 0x6f, 0xbd, 0xaf, 0x92, 0xdf, 0xc1, 0x39, 0x74, 0x77, 0x2e, 0x17,
	0x4f, 0xff, 0x46, 0x28, 0x1c, 0x78, 0xff, 0x64, 0xaf, 0x92, 0x59, 0x4b, 0x4d, 0x1b, 0xee, 0x23,
	0xf5, 0xe2, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbe, 0x38, 0x72, 0x29, 0xc3, 0x04, 0x00, 0x00,
}
