// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/notification.proto

/*
Package go_micro_srv_notification is a generated protocol buffer package.

It is generated from these files:
	proto/notification.proto

It has these top-level messages:
	GetUserNotifcationsRequest
	Notification
	UserNotifications
	NotificationListResponse
*/
package go_micro_srv_notification

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Requests
type GetUserNotifcationsRequest struct {
	UserID string `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
}

func (m *GetUserNotifcationsRequest) Reset()                    { *m = GetUserNotifcationsRequest{} }
func (m *GetUserNotifcationsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetUserNotifcationsRequest) ProtoMessage()               {}
func (*GetUserNotifcationsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetUserNotifcationsRequest) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

// Responses
type Notification struct {
	NotificationID   string `protobuf:"bytes,1,opt,name=notificationID" json:"notificationID,omitempty"`
	NotificationType string `protobuf:"bytes,2,opt,name=notificationType" json:"notificationType,omitempty"`
	UserID           string `protobuf:"bytes,3,opt,name=userID" json:"userID,omitempty"`
	ObjectID         string `protobuf:"bytes,4,opt,name=objectID" json:"objectID,omitempty"`
	Title            string `protobuf:"bytes,5,opt,name=title" json:"title,omitempty"`
	Subtitle         string `protobuf:"bytes,6,opt,name=subtitle" json:"subtitle,omitempty"`
	Description      string `protobuf:"bytes,7,opt,name=description" json:"description,omitempty"`
	Timestamp        string `protobuf:"bytes,8,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *Notification) Reset()                    { *m = Notification{} }
func (m *Notification) String() string            { return proto.CompactTextString(m) }
func (*Notification) ProtoMessage()               {}
func (*Notification) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Notification) GetNotificationID() string {
	if m != nil {
		return m.NotificationID
	}
	return ""
}

func (m *Notification) GetNotificationType() string {
	if m != nil {
		return m.NotificationType
	}
	return ""
}

func (m *Notification) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *Notification) GetObjectID() string {
	if m != nil {
		return m.ObjectID
	}
	return ""
}

func (m *Notification) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Notification) GetSubtitle() string {
	if m != nil {
		return m.Subtitle
	}
	return ""
}

func (m *Notification) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Notification) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

type UserNotifications struct {
	Notifications []*Notification `protobuf:"bytes,1,rep,name=notifications" json:"notifications,omitempty"`
}

func (m *UserNotifications) Reset()                    { *m = UserNotifications{} }
func (m *UserNotifications) String() string            { return proto.CompactTextString(m) }
func (*UserNotifications) ProtoMessage()               {}
func (*UserNotifications) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *UserNotifications) GetNotifications() []*Notification {
	if m != nil {
		return m.Notifications
	}
	return nil
}

type NotificationListResponse struct {
	Status  string             `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Message string             `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Data    *UserNotifications `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *NotificationListResponse) Reset()                    { *m = NotificationListResponse{} }
func (m *NotificationListResponse) String() string            { return proto.CompactTextString(m) }
func (*NotificationListResponse) ProtoMessage()               {}
func (*NotificationListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *NotificationListResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *NotificationListResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *NotificationListResponse) GetData() *UserNotifications {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*GetUserNotifcationsRequest)(nil), "go.micro.srv.notification.GetUserNotifcationsRequest")
	proto.RegisterType((*Notification)(nil), "go.micro.srv.notification.Notification")
	proto.RegisterType((*UserNotifications)(nil), "go.micro.srv.notification.UserNotifications")
	proto.RegisterType((*NotificationListResponse)(nil), "go.micro.srv.notification.NotificationListResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for NotificationService service

type NotificationServiceClient interface {
	GetUserNotifications(ctx context.Context, in *GetUserNotifcationsRequest, opts ...client.CallOption) (*NotificationListResponse, error)
}

type notificationServiceClient struct {
	c           client.Client
	serviceName string
}

func NewNotificationServiceClient(serviceName string, c client.Client) NotificationServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "go.micro.srv.notification"
	}
	return &notificationServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *notificationServiceClient) GetUserNotifications(ctx context.Context, in *GetUserNotifcationsRequest, opts ...client.CallOption) (*NotificationListResponse, error) {
	req := c.c.NewRequest(c.serviceName, "NotificationService.GetUserNotifications", in)
	out := new(NotificationListResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for NotificationService service

type NotificationServiceHandler interface {
	GetUserNotifications(context.Context, *GetUserNotifcationsRequest, *NotificationListResponse) error
}

func RegisterNotificationServiceHandler(s server.Server, hdlr NotificationServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&NotificationService{hdlr}, opts...))
}

type NotificationService struct {
	NotificationServiceHandler
}

func (h *NotificationService) GetUserNotifications(ctx context.Context, in *GetUserNotifcationsRequest, out *NotificationListResponse) error {
	return h.NotificationServiceHandler.GetUserNotifications(ctx, in, out)
}

func init() { proto.RegisterFile("proto/notification.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 354 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0xc6, 0x4d, 0xff, 0x77, 0xaa, 0xa2, 0x6b, 0x91, 0xb5, 0x78, 0x28, 0x39, 0x68, 0x11, 0x89,
	0xd0, 0xea, 0xdd, 0x43, 0x41, 0x0a, 0xda, 0x43, 0xd4, 0x07, 0x48, 0xd2, 0xb5, 0xac, 0x98, 0x6e,
	0xdc, 0x99, 0x14, 0xbc, 0x7b, 0xf0, 0xe4, 0x13, 0xf8, 0xb0, 0xd2, 0x4d, 0x13, 0x57, 0x4b, 0x8b,
	0xc7, 0xef, 0xf7, 0xed, 0xcc, 0xec, 0x7e, 0x3b, 0xc0, 0x13, 0xad, 0x48, 0x5d, 0xcc, 0x14, 0xc9,
	0x27, 0x19, 0x05, 0x24, 0xd5, 0xcc, 0x33, 0x88, 0x1d, 0x4d, 0x95, 0x17, 0xcb, 0x48, 0x2b, 0x0f,
	0xf5, 0xdc, 0xb3, 0x0f, 0xb8, 0x97, 0xd0, 0xb9, 0x11, 0xf4, 0x88, 0x42, 0x8f, 0x17, 0x38, 0xa3,
	0xe8, 0x8b, 0xd7, 0x54, 0x20, 0xb1, 0x43, 0xa8, 0xa5, 0x28, 0xf4, 0x68, 0xc8, 0x9d, 0xae, 0xd3,
	0x6b, 0xfa, 0x4b, 0xe5, 0x7e, 0x94, 0x60, 0x7b, 0x6c, 0xb5, 0x61, 0x27, 0xb0, 0x6b, 0xb7, 0x2d,
	0x0a, 0xfe, 0x50, 0x76, 0x06, 0x7b, 0x36, 0x79, 0x78, 0x4b, 0x04, 0x2f, 0x99, 0x93, 0x2b, 0xdc,
	0x1a, 0x5e, 0xb6, 0x87, 0xb3, 0x0e, 0x34, 0x54, 0xf8, 0x2c, 0x22, 0x1a, 0x0d, 0x79, 0xc5, 0x38,
	0x85, 0x66, 0x6d, 0xa8, 0x92, 0xa4, 0x17, 0xc1, 0xab, 0xc6, 0xc8, 0xc4, 0xa2, 0x02, 0xd3, 0x30,
	0x33, 0x6a, 0x59, 0x45, 0xae, 0x59, 0x17, 0x5a, 0x13, 0x81, 0x91, 0x96, 0xc9, 0x62, 0x30, 0xaf,
	0x1b, 0xdb, 0x46, 0xec, 0x18, 0x9a, 0x24, 0x63, 0x81, 0x14, 0xc4, 0x09, 0x6f, 0x18, 0xff, 0x07,
	0xb8, 0x21, 0xec, 0x17, 0xe9, 0x2d, 0x6f, 0x8f, 0xec, 0x0e, 0x76, 0xec, 0xe7, 0x20, 0x77, 0xba,
	0xe5, 0x5e, 0xab, 0x7f, 0xea, 0xad, 0xfd, 0x08, 0xcf, 0x6e, 0xe0, 0xff, 0xae, 0x76, 0x3f, 0x1d,
	0xe0, 0xb6, 0x7f, 0x2b, 0x91, 0x7c, 0x81, 0x89, 0x9a, 0xa1, 0x89, 0x09, 0x29, 0xa0, 0x14, 0xf3,
	0x3f, 0xca, 0x14, 0xe3, 0x50, 0x8f, 0x05, 0x62, 0x30, 0xcd, 0x13, 0xce, 0x25, 0xbb, 0x86, 0xca,
	0x24, 0xa0, 0xc0, 0xc4, 0xda, 0xea, 0x9f, 0x6f, 0xb8, 0xd4, 0xca, 0xcb, 0x7c, 0x53, 0xd9, 0xff,
	0x72, 0xe0, 0xc0, 0xe6, 0xf7, 0x42, 0xcf, 0x65, 0x24, 0xd8, 0xbb, 0x03, 0x6d, 0x7b, 0x9d, 0x8a,
	0x40, 0xae, 0x36, 0x0c, 0x59, 0xbf, 0x7f, 0x9d, 0xc1, 0x3f, 0x03, 0xb3, 0x03, 0x71, 0xb7, 0xc2,
	0x9a, 0x59, 0xfb, 0xc1, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf3, 0x2b, 0x66, 0x3f, 0x12, 0x03,
	0x00, 0x00,
}
